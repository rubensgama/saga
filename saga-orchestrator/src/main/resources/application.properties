spring.datasource.url=jdbc:sqlserver://10.10.28.26:1433;database=sian_sso
spring.datasource.username=usr_sian_sso
spring.datasource.password=123456
spring.jersey.application-path=api
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
server.port=8080
server.servlet.context-path=/saga
spring.application.version=0.0.1
spring.jackson.serialization.write-dates-as-timestamps=false
# Setting manual ack on consumer side
#spring.rabbitmq.listener.simple.acknowledge-mode=manual
saga.timeout=10000

#spring.rabbitmq.host=localhost
#spring.rabbitmq.host=dsv.sian-rabbitmq.mj.gov.br
spring.rabbitmq.host=rabbit-sian.apps.os.tst.mj.gov.br
spring.rabbitmq.port=5672 
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.connection-timeout=10000
# The sender turns on the confirm mechanism
spring.rabbitmq.publisher-confirms=true
# Sender opens return confirmation mechanism
spring.rabbitmq.publisher-returns=true


rabbitmq.saga.order.queue=order-queue
rabbitmq.saga.order.routing-key=order-key

rabbitmq.saga.payment.queue=payment-queue
rabbitmq.saga.payment.routing-key=payment-key

rabbitmq.saga.delivery.queue=delivery-queue
rabbitmq.saga.delivery.routing-key=delivery-key

rabbitmq.saga.queue=saga-queue
rabbitmq.saga.exchange=saga-exchange
rabbitmq.saga.routing-key=saga-key

